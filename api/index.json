[{"name":"Collections","qualifiedName":"Collections","href":"topics/Collections-topic.html","kind":18,"overriddenDepth":0},{"name":"Graphs","qualifiedName":"Graphs","href":"topics/Graphs-topic.html","kind":18,"overriddenDepth":0},{"name":"Grids","qualifiedName":"Grids","href":"topics/Grids-topic.html","kind":18,"overriddenDepth":0},{"name":"Pathfinding","qualifiedName":"Pathfinding","href":"topics/Pathfinding-topic.html","kind":18,"overriddenDepth":0},{"name":"sector","qualifiedName":"sector","href":"sector/sector-library.html","kind":9,"overriddenDepth":0,"packageRank":0,"desc":""},{"name":"AbsentMapEntry","qualifiedName":"sector.AbsentMapEntry","href":"sector/AbsentMapEntry-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"An entry for an absent key-value pair in an IndexMap.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"index","qualifiedName":"sector.AbsentMapEntry.index","href":"sector/AbsentMapEntry/index.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The index where the key-value pair exists.","enclosedBy":{"name":"AbsentMapEntry","kind":3,"href":"sector/AbsentMapEntry-class.html"}},{"name":"isAbsent","qualifiedName":"sector.AbsentMapEntry.isAbsent","href":"sector/AbsentMapEntry/isAbsent.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if the key is not present in the map.","enclosedBy":{"name":"AbsentMapEntry","kind":3,"href":"sector/AbsentMapEntry-class.html"}},{"name":"putIfAbsent","qualifiedName":"sector.AbsentMapEntry.putIfAbsent","href":"sector/AbsentMapEntry/putIfAbsent.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Inserts the key-value pair into the map if the key is absent.","enclosedBy":{"name":"AbsentMapEntry","kind":3,"href":"sector/AbsentMapEntry-class.html"}},{"name":"setOrUpdate","qualifiedName":"sector.AbsentMapEntry.setOrUpdate","href":"sector/AbsentMapEntry/setOrUpdate.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Sets the value associated with the key.","enclosedBy":{"name":"AbsentMapEntry","kind":3,"href":"sector/AbsentMapEntry-class.html"}},{"name":"value","qualifiedName":"sector.AbsentMapEntry.value","href":"sector/AbsentMapEntry/value.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The value associated with the key, or null if the key is absent.","enclosedBy":{"name":"AbsentMapEntry","kind":3,"href":"sector/AbsentMapEntry-class.html"}},{"name":"AdjacencyListGraph","qualifiedName":"sector.AdjacencyListGraph","href":"sector/AdjacencyListGraph-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"An unweighted graph suitable for sparse graphs.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"AdjacencyListGraph","qualifiedName":"sector.AdjacencyListGraph.AdjacencyListGraph","href":"sector/AdjacencyListGraph/AdjacencyListGraph.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an empty adjacency list graph.","enclosedBy":{"name":"AdjacencyListGraph","kind":3,"href":"sector/AdjacencyListGraph-class.html"}},{"name":"AdjacencyListGraph.from","qualifiedName":"sector.AdjacencyListGraph.from","href":"sector/AdjacencyListGraph/AdjacencyListGraph.from.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an adjacency list graph from a walkable.","enclosedBy":{"name":"AdjacencyListGraph","kind":3,"href":"sector/AdjacencyListGraph-class.html"}},{"name":"AdjacencyListGraph.fromEdges","qualifiedName":"sector.AdjacencyListGraph.fromEdges","href":"sector/AdjacencyListGraph/AdjacencyListGraph.fromEdges.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an adjacency list graph from edges.","enclosedBy":{"name":"AdjacencyListGraph","kind":3,"href":"sector/AdjacencyListGraph-class.html"}},{"name":"Astar","qualifiedName":"sector.Astar","href":"sector/Astar-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that finds an optimal shortest path using a heuristic.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"Astar","qualifiedName":"sector.Astar.Astar","href":"sector/Astar/Astar.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new A* algorithm.","enclosedBy":{"name":"Astar","kind":3,"href":"sector/Astar-class.html"}},{"name":"findBestPathExclusive","qualifiedName":"sector.Astar.findBestPathExclusive","href":"sector/Astar/findBestPathExclusive.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns an optimal path (and it's total cost) in graph from start to a\nnode that satisfies goal.","enclosedBy":{"name":"Astar","kind":3,"href":"sector/Astar-class.html"}},{"name":"BestPathfinder","qualifiedName":"sector.BestPathfinder","href":"sector/BestPathfinder-mixin.html","kind":11,"overriddenDepth":0,"packageRank":0,"desc":"Visits a WeightedWalkable's nodes, finding a best path to a goal node.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"findBestPath","qualifiedName":"sector.BestPathfinder.findBestPath","href":"sector/BestPathfinder/findBestPath.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns an optimal path (and it's total cost) in graph from start to a\nnode that satisfies goal.","enclosedBy":{"name":"BestPathfinder","kind":11,"href":"sector/BestPathfinder-mixin.html"}},{"name":"findBestPathExclusive","qualifiedName":"sector.BestPathfinder.findBestPathExclusive","href":"sector/BestPathfinder/findBestPathExclusive.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns an optimal path (and it's total cost) in graph from start to a\nnode that satisfies goal.","enclosedBy":{"name":"BestPathfinder","kind":11,"href":"sector/BestPathfinder-mixin.html"}},{"name":"BreadthFirstSearch","qualifiedName":"sector.BreadthFirstSearch","href":"sector/BreadthFirstSearch-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that search the shallowest nodes in a graph first.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"BreadthFirstSearch","qualifiedName":"sector.BreadthFirstSearch.BreadthFirstSearch","href":"sector/BreadthFirstSearch/BreadthFirstSearch.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new breadth-first search algorithm.","enclosedBy":{"name":"BreadthFirstSearch","kind":3,"href":"sector/BreadthFirstSearch-class.html"}},{"name":"findPathExclusive","qualifiedName":"sector.BreadthFirstSearch.findPathExclusive","href":"sector/BreadthFirstSearch/findPathExclusive.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns a path in graph from start to a node that satisfies goal.","enclosedBy":{"name":"BreadthFirstSearch","kind":3,"href":"sector/BreadthFirstSearch-class.html"}},{"name":"Crawler","qualifiedName":"sector.Crawler","href":"sector/Crawler.html","kind":21,"overriddenDepth":0,"packageRank":0,"desc":"A function that visits nodes in a graph structure starting from start.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"CycleException","qualifiedName":"sector.CycleException","href":"sector/CycleException-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"Indicates a cycle was detected in a graph expected to be acyclic.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"CycleException","qualifiedName":"sector.CycleException.CycleException","href":"sector/CycleException/CycleException.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new cycle exception with a single vertex involved in the cycle.","enclosedBy":{"name":"CycleException","kind":3,"href":"sector/CycleException-class.html"}},{"name":"involved","qualifiedName":"sector.CycleException.involved","href":"sector/CycleException/involved.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"An arbitrary vertex involved in the cycle.","enclosedBy":{"name":"CycleException","kind":3,"href":"sector/CycleException-class.html"}},{"name":"toString","qualifiedName":"sector.CycleException.toString","href":"sector/CycleException/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"CycleException","kind":3,"href":"sector/CycleException-class.html"}},{"name":"DepthFirstSearch","qualifiedName":"sector.DepthFirstSearch","href":"sector/DepthFirstSearch-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that explores the graph in depth first order.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"DepthFirstSearch","qualifiedName":"sector.DepthFirstSearch.DepthFirstSearch","href":"sector/DepthFirstSearch/DepthFirstSearch.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new depth-first search algorithm.","enclosedBy":{"name":"DepthFirstSearch","kind":3,"href":"sector/DepthFirstSearch-class.html"}},{"name":"findPathExclusive","qualifiedName":"sector.DepthFirstSearch.findPathExclusive","href":"sector/DepthFirstSearch/findPathExclusive.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns a path in graph from start to a node that satisfies goal.","enclosedBy":{"name":"DepthFirstSearch","kind":3,"href":"sector/DepthFirstSearch-class.html"}},{"name":"Dijkstra","qualifiedName":"sector.Dijkstra","href":"sector/Dijkstra-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that finds the best path in a weighted graph.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"Dijkstra","qualifiedName":"sector.Dijkstra.Dijkstra","href":"sector/Dijkstra/Dijkstra.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new Dijkstra's algorithm.","enclosedBy":{"name":"Dijkstra","kind":3,"href":"sector/Dijkstra-class.html"}},{"name":"findBestPathExclusive","qualifiedName":"sector.Dijkstra.findBestPathExclusive","href":"sector/Dijkstra/findBestPathExclusive.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns an optimal path (and it's total cost) in graph from start to a\nnode that satisfies goal.","enclosedBy":{"name":"Dijkstra","kind":3,"href":"sector/Dijkstra-class.html"}},{"name":"Edge","qualifiedName":"sector.Edge","href":"sector/Edge-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A graph edge connecting two nodes.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"operator ==","qualifiedName":"sector.Edge.==","href":"sector/Edge/operator_equals.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"The equality operator.","enclosedBy":{"name":"Edge","kind":3,"href":"sector/Edge-class.html"}},{"name":"Edge","qualifiedName":"sector.Edge.Edge","href":"sector/Edge/Edge.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an edge from source to target.","enclosedBy":{"name":"Edge","kind":3,"href":"sector/Edge-class.html"}},{"name":"hashCode","qualifiedName":"sector.Edge.hashCode","href":"sector/Edge/hashCode.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The hash code for this object.","enclosedBy":{"name":"Edge","kind":3,"href":"sector/Edge-class.html"}},{"name":"reversed","qualifiedName":"sector.Edge.reversed","href":"sector/Edge/reversed.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The edge with the source and target nodes reversed.","enclosedBy":{"name":"Edge","kind":3,"href":"sector/Edge-class.html"}},{"name":"source","qualifiedName":"sector.Edge.source","href":"sector/Edge/source.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The source node of the edge.","enclosedBy":{"name":"Edge","kind":3,"href":"sector/Edge-class.html"}},{"name":"target","qualifiedName":"sector.Edge.target","href":"sector/Edge/target.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The target node of the edge.","enclosedBy":{"name":"Edge","kind":3,"href":"sector/Edge-class.html"}},{"name":"toString","qualifiedName":"sector.Edge.toString","href":"sector/Edge/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"Edge","kind":3,"href":"sector/Edge-class.html"}},{"name":"FixedLengthIterable","qualifiedName":"sector.FixedLengthIterable","href":"sector/FixedLengthIterable-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"An Iterable for classes that have an efficient fixed length property.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"FixedLengthIterable","qualifiedName":"sector.FixedLengthIterable.FixedLengthIterable","href":"sector/FixedLengthIterable/FixedLengthIterable.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new fixed length iterable.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"any","qualifiedName":"sector.FixedLengthIterable.any","href":"sector/FixedLengthIterable/any.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Checks whether any element of this iterable satisfies test.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"elementAt","qualifiedName":"sector.FixedLengthIterable.elementAt","href":"sector/FixedLengthIterable/elementAt.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns the indexth element.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"every","qualifiedName":"sector.FixedLengthIterable.every","href":"sector/FixedLengthIterable/every.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Checks whether every element of this iterable satisfies test.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"first","qualifiedName":"sector.FixedLengthIterable.first","href":"sector/FixedLengthIterable/first.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The first element.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"firstWhere","qualifiedName":"sector.FixedLengthIterable.firstWhere","href":"sector/FixedLengthIterable/firstWhere.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"The first element that satisfies the given predicate test.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"fold","qualifiedName":"sector.FixedLengthIterable.fold","href":"sector/FixedLengthIterable/fold.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Reduces a collection to a single value by iteratively combining each\nelement of the collection with an existing value","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"forEach","qualifiedName":"sector.FixedLengthIterable.forEach","href":"sector/FixedLengthIterable/forEach.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Invokes action on each element of this iterable in iteration order.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"isEmpty","qualifiedName":"sector.FixedLengthIterable.isEmpty","href":"sector/FixedLengthIterable/isEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Whether this collection has no elements.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"isNotEmpty","qualifiedName":"sector.FixedLengthIterable.isNotEmpty","href":"sector/FixedLengthIterable/isNotEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Whether this collection has at least one element.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"iterator","qualifiedName":"sector.FixedLengthIterable.iterator","href":"sector/FixedLengthIterable/iterator.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"A new Iterator that allows iterating the elements of this Iterable.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"join","qualifiedName":"sector.FixedLengthIterable.join","href":"sector/FixedLengthIterable/join.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Converts each element to a String and concatenates the strings.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"last","qualifiedName":"sector.FixedLengthIterable.last","href":"sector/FixedLengthIterable/last.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The last element.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"lastWhere","qualifiedName":"sector.FixedLengthIterable.lastWhere","href":"sector/FixedLengthIterable/lastWhere.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"The last element that satisfies the given predicate test.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"length","qualifiedName":"sector.FixedLengthIterable.length","href":"sector/FixedLengthIterable/length.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns the number of elements in the iterable.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"reduce","qualifiedName":"sector.FixedLengthIterable.reduce","href":"sector/FixedLengthIterable/reduce.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Reduces a collection to a single value by iteratively combining elements\nof the collection using the provided function.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"single","qualifiedName":"sector.FixedLengthIterable.single","href":"sector/FixedLengthIterable/single.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Checks that this iterable has only one element, and returns that element.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"singleWhere","qualifiedName":"sector.FixedLengthIterable.singleWhere","href":"sector/FixedLengthIterable/singleWhere.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"The single element that satisfies test.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"skip","qualifiedName":"sector.FixedLengthIterable.skip","href":"sector/FixedLengthIterable/skip.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Creates an Iterable that provides all but the first count elements.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"take","qualifiedName":"sector.FixedLengthIterable.take","href":"sector/FixedLengthIterable/take.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Creates a lazy iterable of the count first elements of this iterable.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"toList","qualifiedName":"sector.FixedLengthIterable.toList","href":"sector/FixedLengthIterable/toList.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Creates a List containing the elements of this Iterable.","enclosedBy":{"name":"FixedLengthIterable","kind":3,"href":"sector/FixedLengthIterable-class.html"}},{"name":"FlatQueue","qualifiedName":"sector.FlatQueue","href":"sector/FlatQueue-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A very fast and tiny binary heap priority queue that stores (int, double).","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"FlatQueue","qualifiedName":"sector.FlatQueue.FlatQueue","href":"sector/FlatQueue/FlatQueue.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an empty minimum priority queue.","enclosedBy":{"name":"FlatQueue","kind":3,"href":"sector/FlatQueue-class.html"}},{"name":"add","qualifiedName":"sector.FlatQueue.add","href":"sector/FlatQueue/add.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Adds an element with a priority to the queue.","enclosedBy":{"name":"FlatQueue","kind":3,"href":"sector/FlatQueue-class.html"}},{"name":"capacity","qualifiedName":"sector.FlatQueue.capacity","href":"sector/FlatQueue/capacity.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"How much capacity the queue is using, regardless of reported length.","enclosedBy":{"name":"FlatQueue","kind":3,"href":"sector/FlatQueue-class.html"}},{"name":"clear","qualifiedName":"sector.FlatQueue.clear","href":"sector/FlatQueue/clear.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Clears the queue.","enclosedBy":{"name":"FlatQueue","kind":3,"href":"sector/FlatQueue-class.html"}},{"name":"compact","qualifiedName":"sector.FlatQueue.compact","href":"sector/FlatQueue/compact.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Compact the queue to remove any slots that are no longer used.","enclosedBy":{"name":"FlatQueue","kind":3,"href":"sector/FlatQueue-class.html"}},{"name":"first","qualifiedName":"sector.FlatQueue.first","href":"sector/FlatQueue/first.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns the smallest element in the queue, and its priority.","enclosedBy":{"name":"FlatQueue","kind":3,"href":"sector/FlatQueue-class.html"}},{"name":"isEmpty","qualifiedName":"sector.FlatQueue.isEmpty","href":"sector/FlatQueue/isEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Whether the queue is empty.","enclosedBy":{"name":"FlatQueue","kind":3,"href":"sector/FlatQueue-class.html"}},{"name":"isNotEmpty","qualifiedName":"sector.FlatQueue.isNotEmpty","href":"sector/FlatQueue/isNotEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Whether the queue is not empty.","enclosedBy":{"name":"FlatQueue","kind":3,"href":"sector/FlatQueue-class.html"}},{"name":"length","qualifiedName":"sector.FlatQueue.length","href":"sector/FlatQueue/length.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The length of the queue.","enclosedBy":{"name":"FlatQueue","kind":3,"href":"sector/FlatQueue-class.html"}},{"name":"removeFirst","qualifiedName":"sector.FlatQueue.removeFirst","href":"sector/FlatQueue/removeFirst.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Removes and returns the smallest element in the queue, and its priority.","enclosedBy":{"name":"FlatQueue","kind":3,"href":"sector/FlatQueue-class.html"}},{"name":"toString","qualifiedName":"sector.FlatQueue.toString","href":"sector/FlatQueue/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"FlatQueue","kind":3,"href":"sector/FlatQueue-class.html"}},{"name":"FringeAstar","qualifiedName":"sector.FringeAstar","href":"sector/FringeAstar-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that finds an optimal shortest path using a heuristic.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"FringeAstar","qualifiedName":"sector.FringeAstar.FringeAstar","href":"sector/FringeAstar/FringeAstar.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new Fringe algorithm.","enclosedBy":{"name":"FringeAstar","kind":3,"href":"sector/FringeAstar-class.html"}},{"name":"findBestPathExclusive","qualifiedName":"sector.FringeAstar.findBestPathExclusive","href":"sector/FringeAstar/findBestPathExclusive.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns an optimal path (and it's total cost) in graph from start to a\nnode that satisfies goal.","enclosedBy":{"name":"FringeAstar","kind":3,"href":"sector/FringeAstar-class.html"}},{"name":"Goal","qualifiedName":"sector.Goal","href":"sector/Goal-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"Represents a goal in a pathfinding algorithm.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"Goal.always","qualifiedName":"sector.Goal.always","href":"sector/Goal/Goal.always.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a goal that always matches any node.","enclosedBy":{"name":"Goal","kind":3,"href":"sector/Goal-class.html"}},{"name":"Goal.any","qualifiedName":"sector.Goal.any","href":"sector/Goal/Goal.any.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a goal that matches any of the goals in goals.","enclosedBy":{"name":"Goal","kind":3,"href":"sector/Goal-class.html"}},{"name":"Goal.every","qualifiedName":"sector.Goal.every","href":"sector/Goal/Goal.every.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a goal that matches all of the goals in goals.","enclosedBy":{"name":"Goal","kind":3,"href":"sector/Goal-class.html"}},{"name":"Goal.never","qualifiedName":"sector.Goal.never","href":"sector/Goal/Goal.never.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a goal that never matches any node.","enclosedBy":{"name":"Goal","kind":3,"href":"sector/Goal-class.html"}},{"name":"Goal.node","qualifiedName":"sector.Goal.node","href":"sector/Goal/Goal.node.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a goal that matches a specific node.","enclosedBy":{"name":"Goal","kind":3,"href":"sector/Goal-class.html"}},{"name":"success","qualifiedName":"sector.Goal.success","href":"sector/Goal/success.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if node is a goal, false otherwise.","enclosedBy":{"name":"Goal","kind":3,"href":"sector/Goal-class.html"}},{"name":"Goal.test","qualifiedName":"sector.Goal.test","href":"sector/Goal/Goal.test.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a goal with an arbitrary condition that a node must meet.","enclosedBy":{"name":"Goal","kind":3,"href":"sector/Goal-class.html"}},{"name":"Graph","qualifiedName":"sector.Graph","href":"sector/Graph-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A collection of nodes and edges where edges connect exactly two nodes.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"Graph","qualifiedName":"sector.Graph.Graph","href":"sector/Graph/Graph.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an empty AdjacencyListGraph.","enclosedBy":{"name":"Graph","kind":3,"href":"sector/Graph-class.html"}},{"name":"addEdge","qualifiedName":"sector.Graph.addEdge","href":"sector/Graph/addEdge.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Adds an edge from to the graph.","enclosedBy":{"name":"Graph","kind":3,"href":"sector/Graph-class.html"}},{"name":"addEdges","qualifiedName":"sector.Graph.addEdges","href":"sector/Graph/addEdges.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Adds multiple edges to the graph.","enclosedBy":{"name":"Graph","kind":3,"href":"sector/Graph-class.html"}},{"name":"clear","qualifiedName":"sector.Graph.clear","href":"sector/Graph/clear.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Clears the graph of all nodes and edges.","enclosedBy":{"name":"Graph","kind":3,"href":"sector/Graph-class.html"}},{"name":"Graph.from","qualifiedName":"sector.Graph.from","href":"sector/Graph/Graph.from.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a AdjacencyListGraph graph from a walkable.","enclosedBy":{"name":"Graph","kind":3,"href":"sector/Graph-class.html"}},{"name":"Graph.fromEdges","qualifiedName":"sector.Graph.fromEdges","href":"sector/Graph/Graph.fromEdges.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a AdjacencyListGraph graph from edges.","enclosedBy":{"name":"Graph","kind":3,"href":"sector/Graph-class.html"}},{"name":"removeEdge","qualifiedName":"sector.Graph.removeEdge","href":"sector/Graph/removeEdge.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Removes an edge from the graph.","enclosedBy":{"name":"Graph","kind":3,"href":"sector/Graph-class.html"}},{"name":"GraphBase","qualifiedName":"sector.GraphBase","href":"sector/GraphBase-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A base interface for graphs.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"removeEdge","qualifiedName":"sector.GraphBase.removeEdge","href":"sector/GraphBase/removeEdge.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Removes an edge from the graph.","enclosedBy":{"name":"GraphBase","kind":3,"href":"sector/GraphBase-class.html"}},{"name":"GreedyBestFirstSearch","qualifiedName":"sector.GreedyBestFirstSearch","href":"sector/GreedyBestFirstSearch-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that chooses the locally optimal path at each step.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"GreedyBestFirstSearch","qualifiedName":"sector.GreedyBestFirstSearch.GreedyBestFirstSearch","href":"sector/GreedyBestFirstSearch/GreedyBestFirstSearch.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new Greedy Best-First Search algorithm.","enclosedBy":{"name":"GreedyBestFirstSearch","kind":3,"href":"sector/GreedyBestFirstSearch-class.html"}},{"name":"findBestPathExclusive","qualifiedName":"sector.GreedyBestFirstSearch.findBestPathExclusive","href":"sector/GreedyBestFirstSearch/findBestPathExclusive.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns an optimal path (and it's total cost) in graph from start to a\nnode that satisfies goal.","enclosedBy":{"name":"GreedyBestFirstSearch","kind":3,"href":"sector/GreedyBestFirstSearch-class.html"}},{"name":"Grid","qualifiedName":"sector.Grid","href":"sector/Grid-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A collection of elements accessible by a two-dimensional index.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"operator []","qualifiedName":"sector.Grid.[]","href":"sector/Grid/operator_get.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns the element at a position in the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"operator []=","qualifiedName":"sector.Grid.[]=","href":"sector/Grid/operator_put.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Sets the element at a position in the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"asUnweighted","qualifiedName":"sector.Grid.asUnweighted","href":"sector/Grid/asUnweighted.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a view of this grid as an unweighted walkable.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"asWeighted","qualifiedName":"sector.Grid.asWeighted","href":"sector/Grid/asWeighted.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a view of this grid as a weighted walkable.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"bottomLeft","qualifiedName":"sector.Grid.bottomLeft","href":"sector/Grid/bottomLeft.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The bottom-left position of the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"bottomRight","qualifiedName":"sector.Grid.bottomRight","href":"sector/Grid/bottomRight.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The bottom-right position of the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"bounds","qualifiedName":"sector.Grid.bounds","href":"sector/Grid/bounds.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Bounds of the grid, anchored at the topLeft position.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"cells","qualifiedName":"sector.Grid.cells","href":"sector/Grid/cells.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"An iterable of positions and elements in the grid, in row-major order.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"clear","qualifiedName":"sector.Grid.clear","href":"sector/Grid/clear.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Clears the grid, setting all elements to empty.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"columns","qualifiedName":"sector.Grid.columns","href":"sector/Grid/columns.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Columns of the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"containsPos","qualifiedName":"sector.Grid.containsPos","href":"sector/Grid/containsPos.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns whether a position is within the bounds of the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"copyFrom","qualifiedName":"sector.Grid.copyFrom","href":"sector/Grid/copyFrom.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Copies the elements from another grid into this grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"empty","qualifiedName":"sector.Grid.empty","href":"sector/Grid/empty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The default element for the grid, or the \"empty\" element.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"fill","qualifiedName":"sector.Grid.fill","href":"sector/Grid/fill.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Fills the grid with the given element.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"Grid.filled","qualifiedName":"sector.Grid.filled","href":"sector/Grid/Grid.filled.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new ListGrid with the given width and height.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"Grid.from","qualifiedName":"sector.Grid.from","href":"sector/Grid/Grid.from.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new ListGrid from an existing grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"Grid.fromCells","qualifiedName":"sector.Grid.fromCells","href":"sector/Grid/Grid.fromCells.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new ListGrid from elements in row-major order.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"Grid.fromRows","qualifiedName":"sector.Grid.fromRows","href":"sector/Grid/Grid.fromRows.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Each element in rows, a column, must have the same length, and the\nresulting grid will have a width equal to the number of columns, and a\nheight equal to the length of each column.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"Grid.generate","qualifiedName":"sector.Grid.generate","href":"sector/Grid/Grid.generate.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new ListGrid with the given width and height.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"get","qualifiedName":"sector.Grid.get","href":"sector/Grid/get.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns the element at a position in the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"getUnchecked","qualifiedName":"sector.Grid.getUnchecked","href":"sector/Grid/getUnchecked.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns the element at a position in the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"getUnsafe","qualifiedName":"sector.Grid.getUnsafe","href":"sector/Grid/getUnsafe.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns the element at a position in the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"gridToString","qualifiedName":"sector.Grid.gridToString","href":"sector/Grid/gridToString.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Converts a Grid to a string like toString.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"height","qualifiedName":"sector.Grid.height","href":"sector/Grid/height.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Number of rows in the grid, and the upper bound for the y-coordinate.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"isEmpty","qualifiedName":"sector.Grid.isEmpty","href":"sector/Grid/isEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Whether the grid is zero-length or is entirely filled with empty.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"isNotEmpty","qualifiedName":"sector.Grid.isNotEmpty","href":"sector/Grid/isNotEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Whether the grid contains at least one element that is not empty.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"length","qualifiedName":"sector.Grid.length","href":"sector/Grid/length.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Total number of elements in the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"resize","qualifiedName":"sector.Grid.resize","href":"sector/Grid/resize.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Resizes the grid to the given width and height.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"rows","qualifiedName":"sector.Grid.rows","href":"sector/Grid/rows.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Rows of the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"set","qualifiedName":"sector.Grid.set","href":"sector/Grid/set.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Sets the element at a position in the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"setUnchecked","qualifiedName":"sector.Grid.setUnchecked","href":"sector/Grid/setUnchecked.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Sets the element at a position in the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"setUnsafe","qualifiedName":"sector.Grid.setUnsafe","href":"sector/Grid/setUnsafe.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Sets the element at a position in the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"toString","qualifiedName":"sector.Grid.toString","href":"sector/Grid/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"topLeft","qualifiedName":"sector.Grid.topLeft","href":"sector/Grid/topLeft.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The top-left position of the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"topRight","qualifiedName":"sector.Grid.topRight","href":"sector/Grid/topRight.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The top-right position of the grid.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"width","qualifiedName":"sector.Grid.width","href":"sector/Grid/width.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Number of columns in the grid, and the upper bound for the x-coordinate.","enclosedBy":{"name":"Grid","kind":3,"href":"sector/Grid-class.html"}},{"name":"GridHeuristic","qualifiedName":"sector.GridHeuristic","href":"sector/GridHeuristic-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A heuristic that estimates the minimum total cost of reaching a Pos goal.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"GridHeuristic.chebyshev","qualifiedName":"sector.GridHeuristic.chebyshev","href":"sector/GridHeuristic/GridHeuristic.chebyshev.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Uses distanceChebyshev distance to estimate the total cost.","enclosedBy":{"name":"GridHeuristic","kind":3,"href":"sector/GridHeuristic-class.html"}},{"name":"GridHeuristic.diagonal","qualifiedName":"sector.GridHeuristic.diagonal","href":"sector/GridHeuristic/GridHeuristic.diagonal.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Uses distanceDiagonal distance to estimate the total cost.","enclosedBy":{"name":"GridHeuristic","kind":3,"href":"sector/GridHeuristic-class.html"}},{"name":"estimateTotalCost","qualifiedName":"sector.GridHeuristic.estimateTotalCost","href":"sector/GridHeuristic/estimateTotalCost.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Estimates the minimum total cost of reaching the goal from node.","enclosedBy":{"name":"GridHeuristic","kind":3,"href":"sector/GridHeuristic-class.html"}},{"name":"GridHeuristic.euclidean","qualifiedName":"sector.GridHeuristic.euclidean","href":"sector/GridHeuristic/GridHeuristic.euclidean.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Uses euclidean (√ of distanceSquared) distance to estimate the\ntotal cost.","enclosedBy":{"name":"GridHeuristic","kind":3,"href":"sector/GridHeuristic-class.html"}},{"name":"GridHeuristic.manhattan","qualifiedName":"sector.GridHeuristic.manhattan","href":"sector/GridHeuristic/GridHeuristic.manhattan.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Uses distanceManhattan to estimate the total cost.","enclosedBy":{"name":"GridHeuristic","kind":3,"href":"sector/GridHeuristic-class.html"}},{"name":"ratio","qualifiedName":"sector.GridHeuristic.ratio","href":"sector/GridHeuristic/ratio.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The ratio the heuristic is scaling by.","enclosedBy":{"name":"GridHeuristic","kind":3,"href":"sector/GridHeuristic-class.html"}},{"name":"GridWalkable","qualifiedName":"sector.GridWalkable","href":"sector/GridWalkable-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"Adapts a Grid into a WeightedWalkable.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"GridWalkable.all8Directions","qualifiedName":"sector.GridWalkable.all8Directions","href":"sector/GridWalkable/GridWalkable.all8Directions.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new lazily built weighted graph from a grid.","enclosedBy":{"name":"GridWalkable","kind":3,"href":"sector/GridWalkable-class.html"}},{"name":"containsRoot","qualifiedName":"sector.GridWalkable.containsRoot","href":"sector/GridWalkable/containsRoot.html","kind":10,"overriddenDepth":2,"packageRank":0,"desc":"Returns whether the collection contains a root node.","enclosedBy":{"name":"GridWalkable","kind":3,"href":"sector/GridWalkable-class.html"}},{"name":"GridWalkable.diagonal","qualifiedName":"sector.GridWalkable.diagonal","href":"sector/GridWalkable/GridWalkable.diagonal.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new lazily built weighted graph from a grid.","enclosedBy":{"name":"GridWalkable","kind":3,"href":"sector/GridWalkable-class.html"}},{"name":"GridWalkable.from","qualifiedName":"sector.GridWalkable.from","href":"sector/GridWalkable/GridWalkable.from.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new lazily built weighted graph from a grid.","enclosedBy":{"name":"GridWalkable","kind":3,"href":"sector/GridWalkable-class.html"}},{"name":"roots","qualifiedName":"sector.GridWalkable.roots","href":"sector/GridWalkable/roots.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Each node that is exposed as a root node of the walkable collection.","enclosedBy":{"name":"GridWalkable","kind":3,"href":"sector/GridWalkable-class.html"}},{"name":"successors","qualifiedName":"sector.GridWalkable.successors","href":"sector/GridWalkable/successors.html","kind":10,"overriddenDepth":2,"packageRank":0,"desc":"Returns each distinct node that is a direct successor of the given node.","enclosedBy":{"name":"GridWalkable","kind":3,"href":"sector/GridWalkable-class.html"}},{"name":"Heuristic","qualifiedName":"sector.Heuristic","href":"sector/Heuristic-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A heuristic estimates the minimum total cost of reaching a Goal.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"operator *","qualifiedName":"sector.Heuristic.*","href":"sector/Heuristic/operator_multiply.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a heuristic that scales the cost of another heuristic by ratio.","enclosedBy":{"name":"Heuristic","kind":3,"href":"sector/Heuristic-class.html"}},{"name":"Heuristic","qualifiedName":"sector.Heuristic.Heuristic","href":"sector/Heuristic/Heuristic.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a heuristic from an estimateTotalCost function.","enclosedBy":{"name":"Heuristic","kind":3,"href":"sector/Heuristic-class.html"}},{"name":"Heuristic.always","qualifiedName":"sector.Heuristic.always","href":"sector/Heuristic/Heuristic.always.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Returns a heuristic that always returns value.","enclosedBy":{"name":"Heuristic","kind":3,"href":"sector/Heuristic-class.html"}},{"name":"Heuristic.any","qualifiedName":"sector.Heuristic.any","href":"sector/Heuristic/Heuristic.any.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Returns a heuristic that uses the minimum of multiple possible goals.","enclosedBy":{"name":"Heuristic","kind":3,"href":"sector/Heuristic-class.html"}},{"name":"estimateTotalCost","qualifiedName":"sector.Heuristic.estimateTotalCost","href":"sector/Heuristic/estimateTotalCost.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Estimates the minimum total cost of reaching the goal from node.","enclosedBy":{"name":"Heuristic","kind":3,"href":"sector/Heuristic-class.html"}},{"name":"Heuristic.every","qualifiedName":"sector.Heuristic.every","href":"sector/Heuristic/Heuristic.every.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Returns a heuristic that uses the maximum of multiple possible goals.","enclosedBy":{"name":"Heuristic","kind":3,"href":"sector/Heuristic-class.html"}},{"name":"scaleBy","qualifiedName":"sector.Heuristic.scaleBy","href":"sector/Heuristic/scaleBy.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a heuristic that scales the cost of another heuristic by ratio.","enclosedBy":{"name":"Heuristic","kind":3,"href":"sector/Heuristic-class.html"}},{"name":"Heuristic.zero","qualifiedName":"sector.Heuristic.zero","href":"sector/Heuristic/Heuristic.zero.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Returns a heuristic that always returns 0.0.","enclosedBy":{"name":"Heuristic","kind":3,"href":"sector/Heuristic-class.html"}},{"name":"HeuristicPathfinder","qualifiedName":"sector.HeuristicPathfinder","href":"sector/HeuristicPathfinder-mixin.html","kind":11,"overriddenDepth":0,"packageRank":0,"desc":"Visits a WeightedWalkable's nodes, finding a best path to a goal node.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"asBestPathfinder","qualifiedName":"sector.HeuristicPathfinder.asBestPathfinder","href":"sector/HeuristicPathfinder/asBestPathfinder.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Adapts this HeuristicPathfinder to a BestPathfinder.","enclosedBy":{"name":"HeuristicPathfinder","kind":11,"href":"sector/HeuristicPathfinder-mixin.html"}},{"name":"findBestPath","qualifiedName":"sector.HeuristicPathfinder.findBestPath","href":"sector/HeuristicPathfinder/findBestPath.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns an optimal path (and it's total cost) in graph from start to a\nnode that satisfies goal.","enclosedBy":{"name":"HeuristicPathfinder","kind":11,"href":"sector/HeuristicPathfinder-mixin.html"}},{"name":"findBestPathExclusive","qualifiedName":"sector.HeuristicPathfinder.findBestPathExclusive","href":"sector/HeuristicPathfinder/findBestPathExclusive.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns an optimal path (and it's total cost) in graph from start to a\nnode that satisfies goal.","enclosedBy":{"name":"HeuristicPathfinder","kind":11,"href":"sector/HeuristicPathfinder-mixin.html"}},{"name":"IndexMap","qualifiedName":"sector.IndexMap","href":"sector/IndexMap-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A hash map where element iteration order is independent of their hash codes.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"IndexMap","qualifiedName":"sector.IndexMap.IndexMap","href":"sector/IndexMap/IndexMap.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an insertion-ordered indexing based Map.","enclosedBy":{"name":"IndexMap","kind":3,"href":"sector/IndexMap-class.html"}},{"name":"entryAt","qualifiedName":"sector.IndexMap.entryAt","href":"sector/IndexMap/entryAt.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns the map entry at the given index.","enclosedBy":{"name":"IndexMap","kind":3,"href":"sector/IndexMap-class.html"}},{"name":"entryOf","qualifiedName":"sector.IndexMap.entryOf","href":"sector/IndexMap/entryOf.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns the map entry for the given key.","enclosedBy":{"name":"IndexMap","kind":3,"href":"sector/IndexMap-class.html"}},{"name":"IndexMap.from","qualifiedName":"sector.IndexMap.from","href":"sector/IndexMap/IndexMap.from.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an IndexMap from other.","enclosedBy":{"name":"IndexMap","kind":3,"href":"sector/IndexMap-class.html"}},{"name":"IndexMap.fromEntries","qualifiedName":"sector.IndexMap.fromEntries","href":"sector/IndexMap/IndexMap.fromEntries.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an IndexMap from entries.","enclosedBy":{"name":"IndexMap","kind":3,"href":"sector/IndexMap-class.html"}},{"name":"IndexMap.identity","qualifiedName":"sector.IndexMap.identity","href":"sector/IndexMap/IndexMap.identity.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an IndexMap that uses identical and identityHashCode.","enclosedBy":{"name":"IndexMap","kind":3,"href":"sector/IndexMap-class.html"}},{"name":"IndexSet","qualifiedName":"sector.IndexSet","href":"sector/IndexSet-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A hash set where element iteration order is independent of their hash codes.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"IndexSet","qualifiedName":"sector.IndexSet.IndexSet","href":"sector/IndexSet/IndexSet.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an insertion-ordered indexing based Set.","enclosedBy":{"name":"IndexSet","kind":3,"href":"sector/IndexSet-class.html"}},{"name":"operator []","qualifiedName":"sector.IndexSet.[]","href":"sector/IndexSet/operator_get.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"The key at the given index in the iteration order.","enclosedBy":{"name":"IndexSet","kind":3,"href":"sector/IndexSet-class.html"}},{"name":"operator []=","qualifiedName":"sector.IndexSet.[]=","href":"sector/IndexSet/operator_put.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Sets the element at the given index in the set to value.","enclosedBy":{"name":"IndexSet","kind":3,"href":"sector/IndexSet-class.html"}},{"name":"IndexSet.from","qualifiedName":"sector.IndexSet.from","href":"sector/IndexSet/IndexSet.from.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an IndexSet from elements.","enclosedBy":{"name":"IndexSet","kind":3,"href":"sector/IndexSet-class.html"}},{"name":"IndexSet.identity","qualifiedName":"sector.IndexSet.identity","href":"sector/IndexSet/IndexSet.identity.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an IndexSet that uses identical and identityHashCode.","enclosedBy":{"name":"IndexSet","kind":3,"href":"sector/IndexSet-class.html"}},{"name":"IndexedMapEntry","qualifiedName":"sector.IndexedMapEntry","href":"sector/IndexedMapEntry-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"An entry for an present or absent key-value pair in an IndexMap.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"index","qualifiedName":"sector.IndexedMapEntry.index","href":"sector/IndexedMapEntry/index.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The index where the key-value pair exists.","enclosedBy":{"name":"IndexedMapEntry","kind":3,"href":"sector/IndexedMapEntry-class.html"}},{"name":"isAbsent","qualifiedName":"sector.IndexedMapEntry.isAbsent","href":"sector/IndexedMapEntry/isAbsent.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if the key is not present in the map.","enclosedBy":{"name":"IndexedMapEntry","kind":3,"href":"sector/IndexedMapEntry-class.html"}},{"name":"isPresent","qualifiedName":"sector.IndexedMapEntry.isPresent","href":"sector/IndexedMapEntry/isPresent.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if the key is present in the map.","enclosedBy":{"name":"IndexedMapEntry","kind":3,"href":"sector/IndexedMapEntry-class.html"}},{"name":"key","qualifiedName":"sector.IndexedMapEntry.key","href":"sector/IndexedMapEntry/key.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"A reference to the entry's key in the map, or the new key to be inserted.","enclosedBy":{"name":"IndexedMapEntry","kind":3,"href":"sector/IndexedMapEntry-class.html"}},{"name":"putIfAbsent","qualifiedName":"sector.IndexedMapEntry.putIfAbsent","href":"sector/IndexedMapEntry/putIfAbsent.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Inserts the key-value pair into the map if the key is absent.","enclosedBy":{"name":"IndexedMapEntry","kind":3,"href":"sector/IndexedMapEntry-class.html"}},{"name":"setOrUpdate","qualifiedName":"sector.IndexedMapEntry.setOrUpdate","href":"sector/IndexedMapEntry/setOrUpdate.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Sets the value associated with the key.","enclosedBy":{"name":"IndexedMapEntry","kind":3,"href":"sector/IndexedMapEntry-class.html"}},{"name":"value","qualifiedName":"sector.IndexedMapEntry.value","href":"sector/IndexedMapEntry/value.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The value associated with the key, or null if the key is absent.","enclosedBy":{"name":"IndexedMapEntry","kind":3,"href":"sector/IndexedMapEntry-class.html"}},{"name":"ListGrid","qualifiedName":"sector.ListGrid","href":"sector/ListGrid-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A dense grid implementation using a 1-dimension List to store elements.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"ListGrid.filled","qualifiedName":"sector.ListGrid.filled","href":"sector/ListGrid/ListGrid.filled.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new list grid with the given width and height.","enclosedBy":{"name":"ListGrid","kind":3,"href":"sector/ListGrid-class.html"}},{"name":"ListGrid.from","qualifiedName":"sector.ListGrid.from","href":"sector/ListGrid/ListGrid.from.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new list grid from an existing grid.","enclosedBy":{"name":"ListGrid","kind":3,"href":"sector/ListGrid-class.html"}},{"name":"ListGrid.fromCells","qualifiedName":"sector.ListGrid.fromCells","href":"sector/ListGrid/ListGrid.fromCells.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new list grid from elements in row-major order.","enclosedBy":{"name":"ListGrid","kind":3,"href":"sector/ListGrid-class.html"}},{"name":"ListGrid.fromRows","qualifiedName":"sector.ListGrid.fromRows","href":"sector/ListGrid/ListGrid.fromRows.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new list grid from a 2D list of rows of columns.","enclosedBy":{"name":"ListGrid","kind":3,"href":"sector/ListGrid-class.html"}},{"name":"ListGrid.generate","qualifiedName":"sector.ListGrid.generate","href":"sector/ListGrid/ListGrid.generate.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new list grid with the given width and height.","enclosedBy":{"name":"ListGrid","kind":3,"href":"sector/ListGrid-class.html"}},{"name":"ListGrid.withList","qualifiedName":"sector.ListGrid.withList","href":"sector/ListGrid/ListGrid.withList.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new grid backed by the provided elements in row-major order.","enclosedBy":{"name":"ListGrid","kind":3,"href":"sector/ListGrid-class.html"}},{"name":"Path","qualifiedName":"sector.Path","href":"sector/Path-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A representation of a path in a graph.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"operator ==","qualifiedName":"sector.Path.==","href":"sector/Path/operator_equals.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"The equality operator.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"Path","qualifiedName":"sector.Path.Path","href":"sector/Path/Path.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a path from a list of nodes.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"cycle","qualifiedName":"sector.Path.cycle","href":"sector/Path/cycle.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Whether the path is considered a cycle.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"goal","qualifiedName":"sector.Path.goal","href":"sector/Path/goal.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The goal node of the path.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"hashCode","qualifiedName":"sector.Path.hashCode","href":"sector/Path/hashCode.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The hash code for this object.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"isFound","qualifiedName":"sector.Path.isFound","href":"sector/Path/isFound.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if this path was considered found, i.e. non-empty.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"isIn","qualifiedName":"sector.Path.isIn","href":"sector/Path/isIn.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if this is a valid path in the graph.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"isInWithCost","qualifiedName":"sector.Path.isInWithCost","href":"sector/Path/isInWithCost.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns whether the path is valid and has a total cost of cost.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"isNotFound","qualifiedName":"sector.Path.isNotFound","href":"sector/Path/isNotFound.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if this path was considered not found, i.e. empty.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"nodes","qualifiedName":"sector.Path.nodes","href":"sector/Path/nodes.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The nodes in the path.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"notFound","qualifiedName":"sector.Path.notFound","href":"sector/Path/notFound-constant.html","kind":1,"overriddenDepth":0,"packageRank":0,"desc":"A path that is considered not found.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"start","qualifiedName":"sector.Path.start","href":"sector/Path/start.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The start node of the path.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"toString","qualifiedName":"sector.Path.toString","href":"sector/Path/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"Path","kind":3,"href":"sector/Path-class.html"}},{"name":"Pathfinder","qualifiedName":"sector.Pathfinder","href":"sector/Pathfinder-mixin.html","kind":11,"overriddenDepth":0,"packageRank":0,"desc":"Visits a Walkable's node, finding one or more paths to a goal node.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"findPath","qualifiedName":"sector.Pathfinder.findPath","href":"sector/Pathfinder/findPath.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a path in graph from start to a node that satisfies goal.","enclosedBy":{"name":"Pathfinder","kind":11,"href":"sector/Pathfinder-mixin.html"}},{"name":"findPathExclusive","qualifiedName":"sector.Pathfinder.findPathExclusive","href":"sector/Pathfinder/findPathExclusive.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a path in graph from start to a node that satisfies goal.","enclosedBy":{"name":"Pathfinder","kind":11,"href":"sector/Pathfinder-mixin.html"}},{"name":"PathfinderBase","qualifiedName":"sector.PathfinderBase","href":"sector/PathfinderBase-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A base interface for pathfinding algorithms.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"PresentMapEntry","qualifiedName":"sector.PresentMapEntry","href":"sector/PresentMapEntry-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"An entry for a present key-value pair in an IndexMap.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"index","qualifiedName":"sector.PresentMapEntry.index","href":"sector/PresentMapEntry/index.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The index where the key-value pair exists.","enclosedBy":{"name":"PresentMapEntry","kind":3,"href":"sector/PresentMapEntry-class.html"}},{"name":"isPresent","qualifiedName":"sector.PresentMapEntry.isPresent","href":"sector/PresentMapEntry/isPresent.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if the key is present in the map.","enclosedBy":{"name":"PresentMapEntry","kind":3,"href":"sector/PresentMapEntry-class.html"}},{"name":"putIfAbsent","qualifiedName":"sector.PresentMapEntry.putIfAbsent","href":"sector/PresentMapEntry/putIfAbsent.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Inserts the key-value pair into the map if the key is absent.","enclosedBy":{"name":"PresentMapEntry","kind":3,"href":"sector/PresentMapEntry-class.html"}},{"name":"setOrUpdate","qualifiedName":"sector.PresentMapEntry.setOrUpdate","href":"sector/PresentMapEntry/setOrUpdate.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Sets the value associated with the key.","enclosedBy":{"name":"PresentMapEntry","kind":3,"href":"sector/PresentMapEntry-class.html"}},{"name":"value","qualifiedName":"sector.PresentMapEntry.value","href":"sector/PresentMapEntry/value.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The value associated with the key, or null if the key is absent.","enclosedBy":{"name":"PresentMapEntry","kind":3,"href":"sector/PresentMapEntry-class.html"}},{"name":"ScalarEvent","qualifiedName":"sector.ScalarEvent","href":"sector/ScalarEvent-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A captured Tracer.pushScalar event.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"operator ==","qualifiedName":"sector.ScalarEvent.==","href":"sector/ScalarEvent/operator_equals.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"The equality operator.","enclosedBy":{"name":"ScalarEvent","kind":3,"href":"sector/ScalarEvent-class.html"}},{"name":"ScalarEvent","qualifiedName":"sector.ScalarEvent.ScalarEvent","href":"sector/ScalarEvent/ScalarEvent.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a ScalarEvent for Tracer.pushScalar.","enclosedBy":{"name":"ScalarEvent","kind":3,"href":"sector/ScalarEvent-class.html"}},{"name":"hashCode","qualifiedName":"sector.ScalarEvent.hashCode","href":"sector/ScalarEvent/hashCode.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The hash code for this object.","enclosedBy":{"name":"ScalarEvent","kind":3,"href":"sector/ScalarEvent-class.html"}},{"name":"key","qualifiedName":"sector.ScalarEvent.key","href":"sector/ScalarEvent/key.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The key for the scalar value.","enclosedBy":{"name":"ScalarEvent","kind":3,"href":"sector/ScalarEvent-class.html"}},{"name":"toString","qualifiedName":"sector.ScalarEvent.toString","href":"sector/ScalarEvent/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"ScalarEvent","kind":3,"href":"sector/ScalarEvent-class.html"}},{"name":"value","qualifiedName":"sector.ScalarEvent.value","href":"sector/ScalarEvent/value.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The scalar value.","enclosedBy":{"name":"ScalarEvent","kind":3,"href":"sector/ScalarEvent-class.html"}},{"name":"SkipEvent","qualifiedName":"sector.SkipEvent","href":"sector/SkipEvent-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A captured Tracer.onSkip event.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"operator ==","qualifiedName":"sector.SkipEvent.==","href":"sector/SkipEvent/operator_equals.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"The equality operator.","enclosedBy":{"name":"SkipEvent","kind":3,"href":"sector/SkipEvent-class.html"}},{"name":"SkipEvent","qualifiedName":"sector.SkipEvent.SkipEvent","href":"sector/SkipEvent/SkipEvent.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a SkipEvent for Tracer.onSkip.","enclosedBy":{"name":"SkipEvent","kind":3,"href":"sector/SkipEvent-class.html"}},{"name":"hashCode","qualifiedName":"sector.SkipEvent.hashCode","href":"sector/SkipEvent/hashCode.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The hash code for this object.","enclosedBy":{"name":"SkipEvent","kind":3,"href":"sector/SkipEvent-class.html"}},{"name":"node","qualifiedName":"sector.SkipEvent.node","href":"sector/SkipEvent/node.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The skipped node.","enclosedBy":{"name":"SkipEvent","kind":3,"href":"sector/SkipEvent-class.html"}},{"name":"toString","qualifiedName":"sector.SkipEvent.toString","href":"sector/SkipEvent/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"SkipEvent","kind":3,"href":"sector/SkipEvent-class.html"}},{"name":"SplayTreeGrid","qualifiedName":"sector.SplayTreeGrid","href":"sector/SplayTreeGrid-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A sparse grid implementation backed by a SplayTreeMap.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"SplayTreeGrid.filled","qualifiedName":"sector.SplayTreeGrid.filled","href":"sector/SplayTreeGrid/SplayTreeGrid.filled.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new splay tree grid with the given width and height.","enclosedBy":{"name":"SplayTreeGrid","kind":3,"href":"sector/SplayTreeGrid-class.html"}},{"name":"SplayTreeGrid.from","qualifiedName":"sector.SplayTreeGrid.from","href":"sector/SplayTreeGrid/SplayTreeGrid.from.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new splay tree grid from an existing grid.","enclosedBy":{"name":"SplayTreeGrid","kind":3,"href":"sector/SplayTreeGrid-class.html"}},{"name":"SplayTreeGrid.generate","qualifiedName":"sector.SplayTreeGrid.generate","href":"sector/SplayTreeGrid/SplayTreeGrid.generate.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new splay tree grid with the given width and height.","enclosedBy":{"name":"SplayTreeGrid","kind":3,"href":"sector/SplayTreeGrid-class.html"}},{"name":"nonEmptyEntries","qualifiedName":"sector.SplayTreeGrid.nonEmptyEntries","href":"sector/SplayTreeGrid/nonEmptyEntries.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Entries in the grid that are not equal to empty, in row-major order.","enclosedBy":{"name":"SplayTreeGrid","kind":3,"href":"sector/SplayTreeGrid-class.html"}},{"name":"TraceEvent","qualifiedName":"sector.TraceEvent","href":"sector/TraceEvent-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"An event captured by a TraceRecorder.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"TraceEvent.onSkip","qualifiedName":"sector.TraceEvent.onSkip","href":"sector/TraceEvent/TraceEvent.onSkip.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a TraceEvent for Tracer.onSkip.","enclosedBy":{"name":"TraceEvent","kind":3,"href":"sector/TraceEvent-class.html"}},{"name":"TraceEvent.onVisit","qualifiedName":"sector.TraceEvent.onVisit","href":"sector/TraceEvent/TraceEvent.onVisit.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a TraceEvent for Tracer.onVisit.","enclosedBy":{"name":"TraceEvent","kind":3,"href":"sector/TraceEvent-class.html"}},{"name":"TraceEvent.pushScalar","qualifiedName":"sector.TraceEvent.pushScalar","href":"sector/TraceEvent/TraceEvent.pushScalar.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a TraceEvent for Tracer.pushScalar.","enclosedBy":{"name":"TraceEvent","kind":3,"href":"sector/TraceEvent-class.html"}},{"name":"TraceKey","qualifiedName":"sector.TraceKey","href":"sector/TraceKey-extension-type.html","kind":7,"overriddenDepth":0,"packageRank":0,"desc":"A known key for a scalar value in a trace.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"TraceKey.custom","qualifiedName":"sector.TraceKey.custom","href":"sector/TraceKey/TraceKey.custom.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"The key for a custom value.","enclosedBy":{"name":"TraceKey","kind":7,"href":"sector/TraceKey-extension-type.html"}},{"name":"heuristic","qualifiedName":"sector.TraceKey.heuristic","href":"sector/TraceKey/heuristic.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The key for a heuristic value.","enclosedBy":{"name":"TraceKey","kind":7,"href":"sector/TraceKey-extension-type.html"}},{"name":"TraceRecorder","qualifiedName":"sector.TraceRecorder","href":"sector/TraceRecorder-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A utility for recording events during a graph traversal or pathfinding.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"TraceRecorder","qualifiedName":"sector.TraceRecorder.TraceRecorder","href":"sector/TraceRecorder/TraceRecorder.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"TraceRecorder","kind":3,"href":"sector/TraceRecorder-class.html"}},{"name":"clear","qualifiedName":"sector.TraceRecorder.clear","href":"sector/TraceRecorder/clear.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Clears all recorded events.","enclosedBy":{"name":"TraceRecorder","kind":3,"href":"sector/TraceRecorder-class.html"}},{"name":"events","qualifiedName":"sector.TraceRecorder.events","href":"sector/TraceRecorder/events.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The events that have been recorded, in the order they were recorded.","enclosedBy":{"name":"TraceRecorder","kind":3,"href":"sector/TraceRecorder-class.html"}},{"name":"onSkip","qualifiedName":"sector.TraceRecorder.onSkip","href":"sector/TraceRecorder/onSkip.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Called when a node is skipped.","enclosedBy":{"name":"TraceRecorder","kind":3,"href":"sector/TraceRecorder-class.html"}},{"name":"onVisit","qualifiedName":"sector.TraceRecorder.onVisit","href":"sector/TraceRecorder/onVisit.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Called when a node is visited.","enclosedBy":{"name":"TraceRecorder","kind":3,"href":"sector/TraceRecorder-class.html"}},{"name":"pushScalar","qualifiedName":"sector.TraceRecorder.pushScalar","href":"sector/TraceRecorder/pushScalar.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Adds a scalar value to the trace.","enclosedBy":{"name":"TraceRecorder","kind":3,"href":"sector/TraceRecorder-class.html"}},{"name":"replayStepped","qualifiedName":"sector.TraceRecorder.replayStepped","href":"sector/TraceRecorder/replayStepped.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Replays the recorded events using the provided tracer.","enclosedBy":{"name":"TraceRecorder","kind":3,"href":"sector/TraceRecorder-class.html"}},{"name":"Tracer","qualifiedName":"sector.Tracer","href":"sector/Tracer-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A utility for capturing events during a graph traversal or pathfinding.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"Tracer","qualifiedName":"sector.Tracer.Tracer","href":"sector/Tracer/Tracer.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Tracer","kind":3,"href":"sector/Tracer-class.html"}},{"name":"chain","qualifiedName":"sector.Tracer.chain","href":"sector/Tracer/chain.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a Tracer that chains this Tracer with another Tracer.","enclosedBy":{"name":"Tracer","kind":3,"href":"sector/Tracer-class.html"}},{"name":"clear","qualifiedName":"sector.Tracer.clear","href":"sector/Tracer/clear.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Clears all recorded events.","enclosedBy":{"name":"Tracer","kind":3,"href":"sector/Tracer-class.html"}},{"name":"onSkip","qualifiedName":"sector.Tracer.onSkip","href":"sector/Tracer/onSkip.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Called when a node is skipped.","enclosedBy":{"name":"Tracer","kind":3,"href":"sector/Tracer-class.html"}},{"name":"onVisit","qualifiedName":"sector.Tracer.onVisit","href":"sector/Tracer/onVisit.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Called when a node is visited.","enclosedBy":{"name":"Tracer","kind":3,"href":"sector/Tracer-class.html"}},{"name":"pushScalar","qualifiedName":"sector.Tracer.pushScalar","href":"sector/Tracer/pushScalar.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Adds a scalar value to the trace.","enclosedBy":{"name":"Tracer","kind":3,"href":"sector/Tracer-class.html"}},{"name":"UndirectedGraph","qualifiedName":"sector.UndirectedGraph","href":"sector/UndirectedGraph-mixin.html","kind":11,"overriddenDepth":0,"packageRank":0,"desc":"A mixin that that adapts a Graph to be undirected.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"addEdge","qualifiedName":"sector.UndirectedGraph.addEdge","href":"sector/UndirectedGraph/addEdge.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Adds an edge from to the graph.","enclosedBy":{"name":"UndirectedGraph","kind":11,"href":"sector/UndirectedGraph-mixin.html"}},{"name":"containsEdge","qualifiedName":"sector.UndirectedGraph.containsEdge","href":"sector/UndirectedGraph/containsEdge.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns whether the collection contains an edge connecting two nodes.","enclosedBy":{"name":"UndirectedGraph","kind":11,"href":"sector/UndirectedGraph-mixin.html"}},{"name":"removeEdge","qualifiedName":"sector.UndirectedGraph.removeEdge","href":"sector/UndirectedGraph/removeEdge.html","kind":10,"overriddenDepth":2,"packageRank":0,"desc":"Removes an edge from the graph.","enclosedBy":{"name":"UndirectedGraph","kind":11,"href":"sector/UndirectedGraph-mixin.html"}},{"name":"VisitEvent","qualifiedName":"sector.VisitEvent","href":"sector/VisitEvent-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A captured Tracer.onVisit event.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"operator ==","qualifiedName":"sector.VisitEvent.==","href":"sector/VisitEvent/operator_equals.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"The equality operator.","enclosedBy":{"name":"VisitEvent","kind":3,"href":"sector/VisitEvent-class.html"}},{"name":"VisitEvent","qualifiedName":"sector.VisitEvent.VisitEvent","href":"sector/VisitEvent/VisitEvent.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a VisitEvent for Tracer.onVisit.","enclosedBy":{"name":"VisitEvent","kind":3,"href":"sector/VisitEvent-class.html"}},{"name":"hashCode","qualifiedName":"sector.VisitEvent.hashCode","href":"sector/VisitEvent/hashCode.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The hash code for this object.","enclosedBy":{"name":"VisitEvent","kind":3,"href":"sector/VisitEvent-class.html"}},{"name":"node","qualifiedName":"sector.VisitEvent.node","href":"sector/VisitEvent/node.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The visited node.","enclosedBy":{"name":"VisitEvent","kind":3,"href":"sector/VisitEvent-class.html"}},{"name":"toString","qualifiedName":"sector.VisitEvent.toString","href":"sector/VisitEvent/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"VisitEvent","kind":3,"href":"sector/VisitEvent-class.html"}},{"name":"Walkable","qualifiedName":"sector.Walkable","href":"sector/Walkable-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A collection of values, or \"nodes\", that can be traversed incrementally.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"asUnweighted","qualifiedName":"sector.Walkable.asUnweighted","href":"sector/Walkable/asUnweighted.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns a view of this walkable as an unweighted walkable.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"asWeighted","qualifiedName":"sector.Walkable.asWeighted","href":"sector/Walkable/asWeighted.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a view of this walkable as a weighted walkable.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"Walkable.circular","qualifiedName":"sector.Walkable.circular","href":"sector/Walkable/Walkable.circular.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a walkable with a circular topology.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"containsEdge","qualifiedName":"sector.Walkable.containsEdge","href":"sector/Walkable/containsEdge.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns whether the collection contains an edge connecting two nodes.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"containsRoot","qualifiedName":"sector.Walkable.containsRoot","href":"sector/Walkable/containsRoot.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns whether the collection contains a root node.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"edges","qualifiedName":"sector.Walkable.edges","href":"sector/Walkable/edges.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Each edge in the collection.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"Walkable.empty","qualifiedName":"sector.Walkable.empty","href":"sector/Walkable/Walkable.empty.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an empty walkable.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"Walkable.from","qualifiedName":"sector.Walkable.from","href":"sector/Walkable/Walkable.from.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a walkable from a map of source nodes to target nodes.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"Walkable.generate","qualifiedName":"sector.Walkable.generate","href":"sector/Walkable/Walkable.generate.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a walkable which generates successors dynamically.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"isEmpty","qualifiedName":"sector.Walkable.isEmpty","href":"sector/Walkable/isEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if the walkable collection has no nodes.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"isNotEmpty","qualifiedName":"sector.Walkable.isNotEmpty","href":"sector/Walkable/isNotEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if the walkable collection has one or more nodes.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"Walkable.linear","qualifiedName":"sector.Walkable.linear","href":"sector/Walkable/Walkable.linear.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a walkable with a linear topology.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"roots","qualifiedName":"sector.Walkable.roots","href":"sector/Walkable/roots.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Each node that is exposed as a root node of the walkable collection.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"Walkable.star","qualifiedName":"sector.Walkable.star","href":"sector/Walkable/Walkable.star.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a walkable with a star topology.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"successors","qualifiedName":"sector.Walkable.successors","href":"sector/Walkable/successors.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns each distinct node that is a direct successor of the given node.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"toString","qualifiedName":"sector.Walkable.toString","href":"sector/Walkable/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns a string representation of (some of) the nodes of this.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"Walkable.undirected","qualifiedName":"sector.Walkable.undirected","href":"sector/Walkable/Walkable.undirected.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a walkable with an undirected graph topology.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"walkableToString","qualifiedName":"sector.Walkable.walkableToString","href":"sector/Walkable/walkableToString.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Converts a Walkable to a string like toString.","enclosedBy":{"name":"Walkable","kind":3,"href":"sector/Walkable-class.html"}},{"name":"WalkableBase","qualifiedName":"sector.WalkableBase","href":"sector/WalkableBase-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A base interface for walkable collections.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"asUnweighted","qualifiedName":"sector.WalkableBase.asUnweighted","href":"sector/WalkableBase/asUnweighted.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a view of this walkable as an unweighted walkable.","enclosedBy":{"name":"WalkableBase","kind":3,"href":"sector/WalkableBase-class.html"}},{"name":"containsEdge","qualifiedName":"sector.WalkableBase.containsEdge","href":"sector/WalkableBase/containsEdge.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns whether the collection contains an edge connecting two nodes.","enclosedBy":{"name":"WalkableBase","kind":3,"href":"sector/WalkableBase-class.html"}},{"name":"containsRoot","qualifiedName":"sector.WalkableBase.containsRoot","href":"sector/WalkableBase/containsRoot.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns whether the collection contains a root node.","enclosedBy":{"name":"WalkableBase","kind":3,"href":"sector/WalkableBase-class.html"}},{"name":"isEmpty","qualifiedName":"sector.WalkableBase.isEmpty","href":"sector/WalkableBase/isEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if the walkable collection has no nodes.","enclosedBy":{"name":"WalkableBase","kind":3,"href":"sector/WalkableBase-class.html"}},{"name":"isNotEmpty","qualifiedName":"sector.WalkableBase.isNotEmpty","href":"sector/WalkableBase/isNotEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if the walkable collection has one or more nodes.","enclosedBy":{"name":"WalkableBase","kind":3,"href":"sector/WalkableBase-class.html"}},{"name":"roots","qualifiedName":"sector.WalkableBase.roots","href":"sector/WalkableBase/roots.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Each node that is exposed as a root node of the walkable collection.","enclosedBy":{"name":"WalkableBase","kind":3,"href":"sector/WalkableBase-class.html"}},{"name":"successors","qualifiedName":"sector.WalkableBase.successors","href":"sector/WalkableBase/successors.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns each distinct node that is a direct successor of the given node.","enclosedBy":{"name":"WalkableBase","kind":3,"href":"sector/WalkableBase-class.html"}},{"name":"WeightedEdge","qualifiedName":"sector.WeightedEdge","href":"sector/WeightedEdge-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A weighted graph edge connecting two nodes.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"operator ==","qualifiedName":"sector.WeightedEdge.==","href":"sector/WeightedEdge/operator_equals.html","kind":10,"overriddenDepth":2,"packageRank":0,"desc":"The equality operator.","enclosedBy":{"name":"WeightedEdge","kind":3,"href":"sector/WeightedEdge-class.html"}},{"name":"WeightedEdge","qualifiedName":"sector.WeightedEdge.WeightedEdge","href":"sector/WeightedEdge/WeightedEdge.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a new weighted edge from source to target with a weight.","enclosedBy":{"name":"WeightedEdge","kind":3,"href":"sector/WeightedEdge-class.html"}},{"name":"hashCode","qualifiedName":"sector.WeightedEdge.hashCode","href":"sector/WeightedEdge/hashCode.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The hash code for this object.","enclosedBy":{"name":"WeightedEdge","kind":3,"href":"sector/WeightedEdge-class.html"}},{"name":"reversed","qualifiedName":"sector.WeightedEdge.reversed","href":"sector/WeightedEdge/reversed.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The edge with the source and target nodes reversed.","enclosedBy":{"name":"WeightedEdge","kind":3,"href":"sector/WeightedEdge-class.html"}},{"name":"toString","qualifiedName":"sector.WeightedEdge.toString","href":"sector/WeightedEdge/toString.html","kind":10,"overriddenDepth":2,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"WeightedEdge","kind":3,"href":"sector/WeightedEdge-class.html"}},{"name":"weight","qualifiedName":"sector.WeightedEdge.weight","href":"sector/WeightedEdge/weight.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The weight of the edge.","enclosedBy":{"name":"WeightedEdge","kind":3,"href":"sector/WeightedEdge-class.html"}},{"name":"WeightedGraph","qualifiedName":"sector.WeightedGraph","href":"sector/WeightedGraph-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A graph where edges have an associated weight, or \"cost\", a double value.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"WeightedGraph","qualifiedName":"sector.WeightedGraph.WeightedGraph","href":"sector/WeightedGraph/WeightedGraph.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"WeightedGraph","kind":3,"href":"sector/WeightedGraph-class.html"}},{"name":"addEdge","qualifiedName":"sector.WeightedGraph.addEdge","href":"sector/WeightedGraph/addEdge.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Adds an edge from source to target with a weight to the graph.","enclosedBy":{"name":"WeightedGraph","kind":3,"href":"sector/WeightedGraph-class.html"}},{"name":"addEdges","qualifiedName":"sector.WeightedGraph.addEdges","href":"sector/WeightedGraph/addEdges.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Adds multiple edges to the graph.","enclosedBy":{"name":"WeightedGraph","kind":3,"href":"sector/WeightedGraph-class.html"}},{"name":"clear","qualifiedName":"sector.WeightedGraph.clear","href":"sector/WeightedGraph/clear.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Clears the graph of all nodes and edges.","enclosedBy":{"name":"WeightedGraph","kind":3,"href":"sector/WeightedGraph-class.html"}},{"name":"getEdge","qualifiedName":"sector.WeightedGraph.getEdge","href":"sector/WeightedGraph/getEdge.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns the value at edge or null if it does not exist.","enclosedBy":{"name":"WeightedGraph","kind":3,"href":"sector/WeightedGraph-class.html"}},{"name":"removeEdge","qualifiedName":"sector.WeightedGraph.removeEdge","href":"sector/WeightedGraph/removeEdge.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Removes an edge from source to target with a weight to the graph.","enclosedBy":{"name":"WeightedGraph","kind":3,"href":"sector/WeightedGraph-class.html"}},{"name":"WeightedWalkable","qualifiedName":"sector.WeightedWalkable","href":"sector/WeightedWalkable-class.html","kind":3,"overriddenDepth":0,"packageRank":0,"desc":"A collection of nodes and edges that can be traversed incrementally.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"asUnweighted","qualifiedName":"sector.WeightedWalkable.asUnweighted","href":"sector/WeightedWalkable/asUnweighted.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns a view of this walkable as an unweighted walkable.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"containsEdge","qualifiedName":"sector.WeightedWalkable.containsEdge","href":"sector/WeightedWalkable/containsEdge.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns whether the collection contains an edge connecting two nodes.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"containsRoot","qualifiedName":"sector.WeightedWalkable.containsRoot","href":"sector/WeightedWalkable/containsRoot.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns whether the collection contains a root node.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"edges","qualifiedName":"sector.WeightedWalkable.edges","href":"sector/WeightedWalkable/edges.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Each edge in the collection.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"WeightedWalkable.empty","qualifiedName":"sector.WeightedWalkable.empty","href":"sector/WeightedWalkable/WeightedWalkable.empty.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates an empty weighted walkable.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"WeightedWalkable.from","qualifiedName":"sector.WeightedWalkable.from","href":"sector/WeightedWalkable/WeightedWalkable.from.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a walkable from a map of source nodes to target nodes and weights.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"WeightedWalkable.generate","qualifiedName":"sector.WeightedWalkable.generate","href":"sector/WeightedWalkable/WeightedWalkable.generate.html","kind":2,"overriddenDepth":0,"packageRank":0,"desc":"Creates a weighted walkable which generates successors dynamically.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"isEmpty","qualifiedName":"sector.WeightedWalkable.isEmpty","href":"sector/WeightedWalkable/isEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if the walkable collection has no nodes.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"isNotEmpty","qualifiedName":"sector.WeightedWalkable.isNotEmpty","href":"sector/WeightedWalkable/isNotEmpty.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Returns true if the walkable collection has one or more nodes.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"successors","qualifiedName":"sector.WeightedWalkable.successors","href":"sector/WeightedWalkable/successors.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns each distinct node that is a direct successor of the given node.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"toString","qualifiedName":"sector.WeightedWalkable.toString","href":"sector/WeightedWalkable/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Returns a string representation of (some of) the nodes of this.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"weightedWalkableToString","qualifiedName":"sector.WeightedWalkable.weightedWalkableToString","href":"sector/WeightedWalkable/weightedWalkableToString.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Converts a WeightedWalkable to a string like toString.","enclosedBy":{"name":"WeightedWalkable","kind":3,"href":"sector/WeightedWalkable-class.html"}},{"name":"astar","qualifiedName":"sector.astar","href":"sector/astar-constant.html","kind":19,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that finds an optimal shortest path using a heuristic.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"breadthFirst","qualifiedName":"sector.breadthFirst","href":"sector/breadthFirst.html","kind":8,"overriddenDepth":0,"packageRank":0,"desc":"Visits nodes in a graph structure, shallowest nodes first, from start.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"breadthFirstSearch","qualifiedName":"sector.breadthFirstSearch","href":"sector/breadthFirstSearch-constant.html","kind":19,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that search the shallowest nodes in a graph first.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"countPaths","qualifiedName":"sector.countPaths","href":"sector/countPaths.html","kind":8,"overriddenDepth":0,"packageRank":0,"desc":"Counts the total number of paths from start to a goal in a walkable.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"depthFirst","qualifiedName":"sector.depthFirst","href":"sector/depthFirst.html","kind":8,"overriddenDepth":0,"packageRank":0,"desc":"Visits nodes in a graph structure, deepest nodes first, from start.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"depthFirstSearch","qualifiedName":"sector.depthFirstSearch","href":"sector/depthFirstSearch-constant.html","kind":19,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that explores the graph in depth first order.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"dijkstra","qualifiedName":"sector.dijkstra","href":"sector/dijkstra-constant.html","kind":19,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that finds the best path in a weighted graph.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"fringeAstar","qualifiedName":"sector.fringeAstar","href":"sector/fringeAstar-constant.html","kind":19,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that finds an optimal shortest path using a heuristic.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"greedyBestFirstSearch","qualifiedName":"sector.greedyBestFirstSearch","href":"sector/greedyBestFirstSearch-constant.html","kind":19,"overriddenDepth":0,"packageRank":0,"desc":"Pathfinding algorithm that chooses the locally optimal path at each step.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"stronglyConnected","qualifiedName":"sector.stronglyConnected","href":"sector/stronglyConnected.html","kind":8,"overriddenDepth":0,"packageRank":0,"desc":"Partitions nodes reachable in a graph into strongly connected components.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}},{"name":"topologicalSort","qualifiedName":"sector.topologicalSort","href":"sector/topologicalSort.html","kind":8,"overriddenDepth":0,"packageRank":0,"desc":"Returns a topological sort of the directed edges provided, if one exists.","enclosedBy":{"name":"sector","kind":9,"href":"sector/sector-library.html"}}]
